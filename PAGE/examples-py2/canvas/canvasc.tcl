#############################################################################
# Generated by PAGE version 4.8
# in conjunction with Tcl version 8.6
set vTcl(timestamp) ""


vTcl:font:add_GUI_font font10 \
"-family {DejaVu Sans} -size 0 -weight normal -slant roman -underline 0 -overstrike 0"
set vTcl(actual_gui_bg) #d9d9d9
set vTcl(actual_gui_fg) #000000
set vTcl(actual_gui_menu_bg) #d9d9d9
set vTcl(actual_gui_menu_fg) #000000
set vTcl(complement_color) #d9d9d9
set vTcl(analog_color_p) #d9d9d9
set vTcl(analog_color_m) #d9d9d9
set vTcl(active_fg) #000000
set vTcl(actual_gui_menu_active_bg)  #d8d8d8
set vTcl(active_menu_fg) #000000
#################################
#LIBRARY PROCEDURES
#


if {[info exists vTcl(sourcing)]} {

proc vTcl:project:info {} {
    set base .top37
    namespace eval ::widgets::$base {
        set dflt,origin 0
        set runvisible 1
    }
    namespace eval ::widgets_bindings {
        set tagslist {_TopLevel w}
    }
    namespace eval ::vTcl::modules::main {
        set procs {
        }
        set compounds {
        }
        set projectType single
    }
}
}

#################################
# USER DEFINED PROCEDURES
#

#################################
# GENERATED GUI PROCEDURES
#

proc vTclWindow.top37 {base} {
    if {$base == ""} {
        set base .top37
    }
    if {[winfo exists $base]} {
        wm deiconify $base; return
    }
    set top $base
    ###################
    # CREATING WIDGETS
    ###################
    vTcl::widgets::core::toplevel::createCmd $top -class Toplevel \
        -background {#d9d9d9} -highlightbackground {#f5deb3} \
        -highlightcolor black 
    wm focusmodel $top passive
    wm geometry $top 600x450+-9+69
    update
    # set in toplevel.wgt.
    global vTcl
    set vTcl(save,dflt,origin) 0
    wm maxsize $top 1425 870
    wm minsize $top 1 1
    wm overrideredirect $top 0
    wm resizable $top 1 1
    wm deiconify $top
    wm title $top "New Toplevel 1"
    vTcl:DefineAlias "$top" "Toplevel1" vTcl:Toplevel:WidgetProc "" 1
    ttk::style configure Canvas -background #d9d9d9
    ttk::style configure Canvas -foreground #000000
    ttk::style configure Canvas -font font9
    canvas $top.can38 \
        -background white -borderwidth 2 -closeenough 1.0 -height 265 \
        -highlightbackground {#f5deb3} -highlightcolor black \
        -insertbackground black -relief ridge -selectbackground {#c4c4c4} \
        -selectforeground black -width 378 
    vTcl:DefineAlias "$top.can38" "Canvas1" vTcl:WidgetProc "Toplevel1" 1
    button $top.but39 \
        -activebackground {#d9d9d9} -activeforeground black \
        -background {#d9d9d9} -command quit -disabledforeground {#b8a786} \
        -foreground {#000000} -highlightbackground {#f5deb3} \
        -highlightcolor black -text Quit -width 57 
    vTcl:DefineAlias "$top.but39" "Button1" vTcl:WidgetProc "Toplevel1" 1
    button $top.cpd37 \
        -activebackground {#d9d9d9} -activeforeground black \
        -background {#d9d9d9} -command draw -disabledforeground {#b8a786} \
        -foreground {#000000} -highlightbackground {#f5deb3} \
        -highlightcolor black -text Draw -width 57 
    vTcl:DefineAlias "$top.cpd37" "Button2" vTcl:WidgetProc "Toplevel1" 1
    ###################
    # SETTING GEOMETRY
    ###################
    place $top.can38 \
        -in $top -x 80 -y 40 -anchor nw -bordermode ignore 
    place $top.but39 \
        -in $top -x 390 -y 380 -width 67 -relwidth 0 -height 26 -relheight 0 \
        -anchor nw -bordermode ignore 
    place $top.cpd37 \
        -in $top -x 280 -y 380 -width 67 -height 26 -anchor nw \
        -bordermode ignore 

    vTcl:FireEvent $base <<Ready>>
}

#############################################################################
## Binding tag:  _TopLevel

bind "_TopLevel" <<Create>> {
    if {![info exists _topcount]} {set _topcount 0}; incr _topcount
}
bind "_TopLevel" <<DeleteWindow>> {
    if {[set ::%W::_modal]} {
                vTcl:Toplevel:WidgetProc %W endmodal
            } else {
                destroy %W; if {$_topcount == 0} {exit}
            }
}
bind "_TopLevel" <Destroy> {
    if {[winfo toplevel %W] == "%W"} {incr _topcount -1}
}
#############################################################################
## Binding tag:  w


Window show .
Window show .top37

