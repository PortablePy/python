#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 6.1b
#  in conjunction with Tcl version 8.6
#    Feb 21, 2021 04:44:07 PM PST  platform: Linux
#    Feb 28, 2021 07:45:40 PM PST  platform: Linux
#    Feb 28, 2021 08:00:14 PM PST  platform: Linux

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

def init(top, gui, *args, **kwargs):
    global w, top_level, root
    global fullScreenState
    w = gui
    top_level = top
    top_level = top
    top_level.attributes('-fullscreen', True)
    fullScreenState = False
    # The binding for F11 and ESC could be either here or in the GUI
    # module.
    #top_level.bind("<F11>", toggleFullScreen)
    #top_level.bind("<Escape>", quitFullScreen)

def toggleFullScreen(event):
    global fullScreenState
    fullScreenState = not fullScreenState
    top_level.attributes("-fullscreen", fullScreenState)

def quitFullScreen(event):
    global fullScreenState
    fullScreenState = False
    top_level.attributes("-fullscreen", fullScreenState)

def about():
    print('fullscreen_support.about')
    sys.stdout.flush()

def help():
    print('fullscreen_support.help')
    sys.stdout.flush()

def open():
    print('fullscreen_support.open')
    sys.stdout.flush()

def quit():
    print('fullscreen_support.quit')
    sys.stdout.flush()
    sys.exit()

def full_screen():
    print('fullscreen_support.full_screen')
    sys.stdout.flush()
    global fullScreenState
    fullScreenState = True
    top_level.attributes("-fullscreen", fullScreenState)

def partial_screen():
    print('fullscreen_support.partial_screen')
    sys.stdout.flush()
    global fullScreenState
    fullScreenState = False
    top_level.attributes("-fullscreen", fullScreenState)


def toggle_screen_fill():
    print('fullscreen_support.toggle_screen_fill')
    sys.stdout.flush()
    global fullScreenState
    fullScreenState = not fullScreenState
    top_level.attributes("-fullscreen", fullScreenState)

def quitFullScreen(event):
    global fullScreenState
    fullScreenState = False
    top_level.attributes("-fullscreen", fullScreenState)

def about():
    print('fullscreen_support.about')
    sys.stdout.flush()

def help():
    print('fullscreen_support.help')
    sys.stdout.flush()

def open():
    print('fullscreen_support.open')
    sys.stdout.flush()    
    
def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None

if __name__ == '__main__':
    import fullscreen
    fullscreen.vp_start_gui()





