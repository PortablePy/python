#
# சாவா-கைபதிப்பு பொருள் குறியீட்டு  ->சாகைபொகு
# சாகைபொகுவை பாகுபடுத்தி செயலாக்குவதற்கான எடுத்துக்காட்டு கோப்பு
#
#அச்சிடு வரையறு - பின் வரும் நிரல்களில் அச்சிடு பயன்படுத்தலாம்.
def அச்சிடு(*வாதங்கள்,பிரி=" ",முடி='\n',கோப்பு=None,பறிப்பு=False):
    print(*வாதங்கள், sep=பிரி,end=முடி, file=கோப்பு,flush=பறிப்பு)
    
# உள்ளீடு வரையறு - பின் வரும் நிரல்களில் அச்சிடு பயன்படுத்தலாம்.    
def உள்ளீடு(*வாதங்கள்):
    அ = input (*வாதங்கள்)
    return அ

import urllib.request as உவிநூலககோரிக்கை # பைதான் 2.7 இல் உள்ளதைப் போல urllib2 க்கு பதிலாக
import json as சாகைபொகு


def முடிவுகளைஅச்சிடு(தரவு):
    # சரம் தரவை அகராதியில் ஏற்ற சாகைபொகு தொகுதியைப் பயன்படுத்தவும்
    அந்தசாகைபொகு = சாகைபொகு.loads(தரவு)
    கோப்பு = open ("நிலநடுக்கம்.txt","w+")
    # இப்போது வேறு எந்த பைதான் பொருளைப் போலவும் JSON இன் உள்ளடக்கங்களை அணுகலாம்
    if "title" in அந்தசாகைபொகு["metadata"]:
        அச்சிடு(அந்தசாகைபொகு["metadata"]["title"])
        கோப்பு.write(அந்தசாகைபொகு["metadata"]["title"])
        கோப்பு.write("\n")

    # நிகழ்வுகளின் எண்ணிக்கையையும், அளவு மற்றும் ஒவ்வொரு நிகழ்வின் பெயரையும் வெளியிடுங்கள்
    எண்ணிக்கை = அந்தசாகைபொகு["metadata"]["count"]
    print(str(எண்ணிக்கை) + " நிகழ்வுகள் பதிவு செய்யப்பட்டன")
    கோப்பு.write(str(எண்ணிக்கை) + " நிகழ்வுகள் பதிவு செய்யப்பட்டன\n")
    # ஒவ்வொரு நிகழ்விற்கும், அது நிகழ்ந்த இடத்தை அச்சிடுக
    for ஐ in அந்தசாகைபொகு["features"]:
        அச்சிடு(ஐ["properties"]["place"])
        கோப்பு.write(ஐ["properties"]["place"]+"\n")

    அச்சிடு("--------------\n")
    கோப்பு.write("--------------\n\n")

    # 4 ஐ விட அதிகமான அளவைக் கொண்ட நிகழ்வுகளை அச்சிடுக
    for ஐ in அந்தசாகைபொகு["features"]:
        if ஐ["properties"]["mag"] >= 4.0:
            அச்சிடு("%2.1f" % ஐ["properties"]["mag"], ஐ["properties"]["place"])
            கோப்பு.write("%2.1f" % ஐ["properties"]["mag"]+", "+ஐ["properties"]["place"]+"\n")

    அச்சிடு("--------------\n")
    கோப்பு.write("--------------\n\n")

    # குறைந்தது 1 நபராவது ஏதாவது உணர்ந்ததாக அறிவித்த நிகழ்வுகளை மட்டுமே அச்சிடுக
    அச்சிடு("\n\nஉணரப்பட்ட நிகழ்வுகள்:")
    கோப்பு.write("\n\nஉணரப்பட்ட நிகழ்வுகள்:\n")

    for ஐ in அந்தசாகைபொகு["features"]:
        உணர்ந்தஅறிக்கைகள் = ஐ["properties"]["felt"]
        if (உணர்ந்தஅறிக்கைகள் != None):
            if (உணர்ந்தஅறிக்கைகள் > 0):
                அச்சிடு("%2.1f" % ஐ["properties"]["mag"], ஐ["properties"]
                      ["place"], " அறிக்கை " + str(உணர்ந்தஅறிக்கைகள்) + " முறை")
                கோப்பு.write("%2.1f" % ஐ["properties"]["mag"]+", "+ஐ["properties"]
                      ["place"]+", "+" அறிக்கை " + str(உணர்ந்தஅறிக்கைகள்) + " முறை\n")

    கோப்பு.close()

def முதன்மை():
    #  மூல உவியை வைத்திருக்க ஒரு மாறியை வரையறுக்கவும்
    உவிதரவு = "https://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/2.5_day.geojson"
    # இந்த விஷயத்தில் யு.எஸ்.ஜி.எஸ்ஸிலிருந்து இலவச தரவு ஊட்டத்தைப் பயன்படுத்துவோம் 
    # இந்த ஊட்டம் அளவு 2.5 ஐ விட பெரிய கடைசி நாள் அனைத்து பூகம்பங்களையும் பட்டியலிடுகிறது
    # SSL: CERTIFICATE_VERIFY_FAILED பிழை ஏற்பட்டால் https://medium.com/@yen.hoang.1904/resolve-issue-ssl-certificate-verify-failed-when-trying-to-open-an-url-with-python-on-macos-46d868b44e10
    # URL ஐத் திறந்து தரவைப் படியுங்கள்
    வலைஉவி = உவிநூலககோரிக்கை.urlopen(உவிதரவு)
    அச்சிடு("முடிவு குறியீடு : " + str(வலைஉவி.getcode()))
    if (வலைஉவி.getcode() == 200):
        தரவு = வலைஉவி.read().decode("utf-8")
        # எங்கள் தனிப்பயனாக்கப்பட்ட முடிவுகளை அச்சிடுக
        முடிவுகளைஅச்சிடு(தரவு)
    else:
        அச்சிடு("சேவையகத்திலிருந்து பிழை பெறப்பட்டது, முடிவுகளை மீட்டெடுக்க முடியாது " +
              str(வலைஉவி.getcode()))


if __name__ == "__main__":
    முதன்மை()
