<?xml version="1.0"?>
<!-- generated by wxGlade 0.9.9pre on Sat Jan 18 19:15:48 2020 -->

<application class="MyApp" encoding="UTF-8" for_version="3.0" header_extension=".h" indent_amount="4" indent_symbol="space" is_template="0" language="python" mark_blocks="1" name="app" option="0" overwrite="0" path="speed_meter_example.py" source_extension=".cpp" top_window="frame" use_gettext="0" use_new_namespace="1">
    <object class="MyFrame" name="frame" base="EditFrame">
        <size>400, 349</size>
        <title>wx.lib.agw.speedmeter example</title>
        <style>wxDEFAULT_FRAME_STYLE</style>
        <object class="wxBoxSizer" name="sizer_1" base="EditBoxSizer">
            <orient>wxVERTICAL</orient>
            <object class="sizeritem">
                <option>1</option>
                <border>0</border>
                <flag>wxEXPAND</flag>
                <object class="wxPanel" name="panel_1" base="EditPanel">
                    <object class="wxBoxSizer" name="sizer_2" base="EditBoxSizer">
                        <orient>wxVERTICAL</orient>
                        <object class="sizeritem">
                            <option>1</option>
                            <border>3</border>
                            <flag>wxALL|wxEXPAND</flag>
                            <object class="SM.SpeedMeter" name="speed_meter" base="CustomWidget">
                                <extracode>import wx.lib.agw.speedmeter as SM\n\n# import these on module level to use them in the Extra Properties\nfrom math import pi, sqrt\n</extracode>
                                <extracode_pre>#################################################################\n# the custom widget SpeedMeter:\n# we use the following styles:\n# SM_DRAW_HAND: We Want To Draw The Hand (Arrow) Indicator\n# SM_DRAW_SECTORS: Full Sectors Will Be Drawn, To Indicate Different Intervals\n# SM_DRAW_MIDDLE_TEXT: We Draw Some Text In The Center Of SpeedMeter\n# SM_DRAW_SECONDARY_TICKS: We Draw Secondary (Intermediate) Ticks Between the Main Ticks (Intervals)\n</extracode_pre>
                                <extracode_post># see also extra properties\n\nintervals = list(range(0, 201, 20))\nself.speed_meter.SetIntervals(intervals)\n\nself.speed_meter.SetIntervalColours([wx.BLACK]*10)\n\n# Assign The Ticks: Here They Are Simply The String Equivalent Of The Intervals\nticks = [str(interval) for interval in intervals]\nself.speed_meter.SetTicks(ticks)\n\n# Do Not Draw The External (Container) Arc.\n# Drawing The External Arc May Sometimes Create Uglier Controls.\n# Try To Comment This Line And See It For Yourself!\nself.speed_meter.DrawExternalArc(False)\n#################################################################</extracode_post>
                                <extraproperties>
                                    <property name="AngleRange">-pi/6, 7*pi/6</property>
                                    <property name="IntervalColours">[wx.BLACK]*10</property>
                                    <property name="MiddleTextColour">wx.WHITE</property>
                                    <property name="TicksColour">wx.WHITE</property>
                                    <property name="TicksFont">wx.Font(10, wx.FONTFAMILY_SWISS, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_NORMAL)</property>
                                    <property name="MiddleText">"Km/h"</property>
                                    <property name="MiddleTextFont">wx.Font(8, wx.FONTFAMILY_SWISS, wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_BOLD)</property>
                                    <property name="HandColour">wx.Colour(255, 50, 0)</property>
                                    <property name="SpeedValue">44</property>
                                </extraproperties>
                                <arguments>
                                    <argument>$parent</argument>
                                    <argument>$id</argument>
                                    <argument>agwStyle=SM.SM_DRAW_HAND | SM.SM_DRAW_SECTORS | SM.SM_DRAW_MIDDLE_TEXT | SM.SM_DRAW_SECONDARY_TICKS</argument>
                                </arguments>
                            </object>
                        </object>
                        <object class="sizeritem">
                            <option>0</option>
                            <border>0</border>
                            <flag>wxEXPAND</flag>
                            <object class="wxBoxSizer" name="sizer_3" base="EditBoxSizer">
                                <orient>wxHORIZONTAL</orient>
                                <object class="sizeritem">
                                    <option>0</option>
                                    <border>0</border>
                                    <flag>wxALIGN_CENTER_VERTICAL</flag>
                                    <object class="wxStaticText" name="label_1" base="EditStaticText">
                                        <label>Drag this:</label>
                                    </object>
                                </object>
                                <object class="sizeritem">
                                    <option>1</option>
                                    <border>0</border>
                                    <flag>wxEXPAND</flag>
                                    <object class="wxSlider" name="slider_1" base="EditSlider">
                                        <events>
                                            <handler event="EVT_COMMAND_SCROLL">lambda event: self.speed_meter.SetSpeedValue(event.GetEventObject().GetValue())</handler>
                                        </events>
                                        <style>wxSL_HORIZONTAL</style>
                                        <range>0, 200</range>
                                        <value>44</value>
                                    </object>
                                </object>
                            </object>
                        </object>
                    </object>
                </object>
            </object>
        </object>
    </object>
</application>
