#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 7.4j
#  in conjunction with Tcl version 8.6
#    Apr 09, 2022 08:39:01 AM PDT  platform: Linux

import sys
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *

import three

def main(*args):
    '''Main entry point for the application.'''
    global root
    root = tk.Tk()
    root.protocol( 'WM_DELETE_WINDOW' , root.destroy)
    # Creates a toplevel widget.
    global _top34, _w34
    _top34 = root
    _w34 = three.Main(_top34)
    # Creates a toplevel widget.
    global _top35, _w35
    _top35 = tk.Toplevel(root)
    _w35 = three.Middle(_top35)
    # Creates a toplevel widget.
    global _top36, _w36
    _top36 = tk.Toplevel(root)
    _w36 = three.Popup(_top36)
    root.mainloop()

def how(*args):
    print('three_support.how')
    for arg in args:
        print ('another arg:', arg)
    sys.stdout.flush()

def invoke(*args):
    print('three_support.invoke')
    for arg in args:
        print ('another arg:', arg)
    sys.stdout.flush()

def left_popup(*args):
    print('three_support.left_popup')
    for arg in args:
        print ('another arg:', arg)
    sys.stdout.flush()

def moo(*args):
    print('three_support.moo')
    for arg in args:
        print ('another arg:', arg)
    sys.stdout.flush()

def now(*args):
    print('three_support.now')
    for arg in args:
        print ('another arg:', arg)
    sys.stdout.flush()

def open_middle(*args):
    print('three_support.open_middle')
    for arg in args:
        print ('another arg:', arg)
    sys.stdout.flush()

def popupmenu2(*args):
    print('three_support.popupmenu2')
    for arg in args:
        print ('another arg:', arg)
    sys.stdout.flush()

def quit(*args):
    print('three_support.quit')
    for arg in args:
        print ('another arg:', arg)
    sys.stdout.flush()
    sys.exit()

def that(*args):
    print('three_support.that')
    for arg in args:
        print ('another arg:', arg)
    sys.stdout.flush()

def then(*args):
    print('three_support.then')
    for arg in args:
        print ('another arg:', arg)
    sys.stdout.flush()

def there(*args):
    print('three_support.there')
    for arg in args:
        print ('another arg:', arg)
    sys.stdout.flush()

def this(*args):
    print('three_support.this')
    for arg in args:
        print ('another arg:', arg)
    sys.stdout.flush()

if __name__ == '__main__':
    three.start_up()




