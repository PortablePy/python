#############################################################################
# Generated by PAGE version 7bb
#  in conjunction with Tcl version 8.6
#  Nov 20, 2021 09:09:33 PM PST  platform: Linux
set vTcl(timestamp) ""
if {![info exists vTcl(borrow)]} {
    tk_messageBox -title Error -message  "You must open project files from within PAGE."
    exit}


set image_list { 
}
vTcl:create_project_images $image_list   ;# In image.tcl

if {!$vTcl(borrow) && !$vTcl(template)} {

set desc "-family {DejaVu Sans} -size 12"
set vTcl(actual_gui_font_dft_desc) $desc
set vTcl(actual_gui_font_dft_name) [font create {*}$desc]
set desc "-family {DejaVu Sans} -size 12"
set vTcl(actual_gui_font_text_desc) $desc
set vTcl(actual_gui_font_text_name) [font create {*}$desc]
set desc "-family {DejaVu Sans Mono} -size 12"
set vTcl(actual_gui_font_fixed_desc) $desc
set vTcl(actual_gui_font_fixed_name) [font create {*}$desc]
set desc "-family {Nimbus Sans L} -size 14"
set vTcl(actual_gui_font_menu_desc) $desc
set vTcl(actual_gui_font_menu_name) [font create {*}$desc]
set desc "-family {DejaVu Sans} -size 12"
set vTcl(actual_gui_font_tooltip_desc) $desc
set vTcl(actual_gui_font_tooltip_name) [font create {*}$desc]
set vTcl(actual_gui_font_treeview_desc)  TkDefaultFont
set vTcl(actual_gui_font_treeview_name)  TkDefaultFont
set vTcl(actual_gui_bg) wheat
set vTcl(actual_gui_fg) #000000
set vTcl(actual_gui_analog) #f4bcb2
set vTcl(actual_gui_menu_analog) #85d845
set vTcl(actual_gui_menu_bg) #d9d9d9
set vTcl(actual_gui_menu_fg) #000000
set vTcl(complement_color) #b2c9f4
set vTcl(analog_color_p) #eaf4b2
set vTcl(analog_color_m) #f4bcb2
set vTcl(active_fg) #000000
set vTcl(actual_gui_menu_active_bg)  #ececec
set vTcl(actual_gui_menu_active_fg)  #000000
set vTcl(pr,autoalias) 1
set vTcl(pr,relative_placement) 1
set vTcl(mode) Relative
}



    ttk::style configure Popupmenu -background $vTcl(actual_gui_bg)
    ttk::style configure Popupmenu -foreground $vTcl(actual_gui_fg)
    ttk::style configure Popupmenu -font "$vTcl(actual_gui_font_dft_desc)"
    vTcl::widgets::core::popup::createCmd .pop47 \
        -activebackground $vTcl(analog_color_m) -activeforeground black \
        -background $vTcl(actual_gui_bg) -disabledforeground #b8a786 \
        -font {-family {Nimbus Sans L} -size 14} \
        -foreground $vTcl(actual_gui_fg) -tearoff 1 
    global vTcl
    set val vTcl(.pop47,-proc)
    set vTcl(.pop47,-proc) popup1
    namespace eval ::widgets::.pop47 {}
    set ::widgets::.pop47::ClassOption(-proc) popup1
    set ::widgets::.pop47::options(-proc) popup1
    set ::widgets::.pop47::save(-proc) 1
    vTcl:DefineAlias ".pop47" "Popup1" vTcl:WidgetProc "" 1
    .pop47 add cascade \
        -menu .pop47.men45 -command {{}} -label Zoom 
    set site_2_0 "."
    menu .pop47.men45 \
        -activebackground #f4bcb2 -activeforeground #000000 -background wheat \
        -font $vTcl(actual_gui_font_menu_desc) \
        -foreground $vTcl(actual_gui_menu_fg) -tearoff 0 
    .pop47.men45 add command \
        -command {#lambda:zoom('in')} -label {Zoom in} 
    .pop47.men45 add command \
        -command {#lambda:zoom('out')} -label {Zoom out} 
    .pop47.men45 add command \
        -command {#lambda:zoom('default')} -label {Default size} 
    .pop47 add command \
        -command {#refresh} -label Refresh 
    .pop47 add command \
        -command {#quit} -label Quit 

proc vTclWindow.top1 {base} {
    global vTcl
    if {$base == ""} {
        set base .top1
    }
    if {[winfo exists $base]} {
        wm deiconify $base; return
    }
    set top $base
    set target $base
    ###################
    # CREATING WIDGETS
    ###################
    vTcl::widgets::core::toplevel::createCmd $top -class Toplevel \
        -menu "$top.m45" -background $vTcl(actual_gui_bg) \
        -highlightbackground $vTcl(actual_gui_bg) -highlightcolor black 
    wm focusmodel $top passive
    wm geometry $top 600x450+660+210
    update
    # set in toplevel.wgt.
    global vTcl
    global img_list
    set vTcl(save,dflt,origin) 0
    wm maxsize $top 1905 1050
    wm minsize $top 1 1
    wm overrideredirect $top 0
    wm resizable $top 1 1
    wm deiconify $top
    set toptitle "Toplevel 1"
    wm title $top $toptitle
    namespace eval ::widgets::${top}::ClassOption {}
    set ::widgets::${top}::ClassOption(-toptitle) $toptitle
    vTcl:DefineAlias "$top" "Toplevel1" vTcl:Toplevel:WidgetProc "" 1
    set vTcl(real_top) {}
    vTcl:withBusyCursor {
    menu $top.m45 \
        -activebackground $vTcl(actual_gui_menu_analog) \
        -activeforeground #000000 -background $vTcl(actual_gui_menu_bg) \
        -font $vTcl(actual_gui_font_menu_desc) \
        -foreground $vTcl(actual_gui_menu_fg) -tearoff 0 
    
set site_3_0 $top.m45
    $top.m45 add cascade \
        -menu "$top.m45.men46" -command {{}} -label Zoom 
    menu $site_3_0.men46 \
        -activebackground #f4bcb2 -activeforeground #000000 \
        -background $vTcl(actual_gui_menu_bg) \
        -font $vTcl(actual_gui_font_menu_desc) \
        -foreground $vTcl(actual_gui_menu_fg) -tearoff 0 
    $site_3_0.men46 add command \
        -command {#lambda:zoom('in')} -label {Zoom in} 
    $site_3_0.men46 add command \
        -command {#lambda:zoom('out')} -label {Zoom out} 
    $site_3_0.men46 add command \
        -command {#lambda:zoom('default')} -label {Default Size} 
    $top.m45 add command \
        -command {#refresh} -label Refresh 
    $top.m45 add command \
        -command {#quit} -label Quit 
    vTcl::widgets::ttk::scrolledwindow::CreateCmd $top.scr45 \
        -borderwidth 2 -relief groove -background $vTcl(actual_gui_bg) \
        -height 100 -highlightbackground $vTcl(actual_gui_bg) \
        -highlightcolor black -width 150 
    vTcl:DefineAlias "$top.scr45" "Scrolledwindow1" vTcl:WidgetProc "Toplevel1" 1

    $top.scr45.01 configure -background wheat \
        -borderwidth 2 \
        -height 75 \
        -highlightbackground wheat \
        -highlightcolor black \
        -insertbackground black \
        -relief groove \
        -selectbackground blue \
        -selectforeground white \
        -width 125
    button $top.but46 \
        -activebackground $vTcl(analog_color_m) -activeforeground black \
        -background $vTcl(actual_gui_bg) -borderwidth 2 -command quit \
        -disabledforeground #b8a786 -font $vTcl(actual_gui_font_dft_desc) \
        -foreground $vTcl(actual_gui_fg) \
        -highlightbackground $vTcl(actual_gui_bg) -highlightcolor black \
        -text Quit 
    vTcl:DefineAlias "$top.but46" "Button1" vTcl:WidgetProc "Toplevel1" 1
    ###################
    # SETTING GEOMETRY
    ###################
    place $top.scr45 \
        -in $top -x 0 -relx 0.117 -y 0 -rely 0.044 -width 0 -relwidth 0.762 \
        -height 0 -relheight 0.722 -anchor nw -bordermode ignore 
    place $top.but46 \
        -in $top -x 0 -relx 0.417 -y 0 -rely 0.867 -width 83 -relwidth 0 \
        -height 35 -relheight 0 -anchor nw -bordermode ignore 
    } ;# end vTcl:withBusyCursor 

    vTcl:FireEvent $base <<Ready>>
}

proc 36 {args} {return 1}


Window show .
set btop1 ""
if {$vTcl(borrow)} {
    set btop1 .bor[expr int([expr rand() * 100])]
    while {[lsearch $btop1 $vTcl(tops)] != -1} {
        set btop1 .bor[expr int([expr rand() * 100])]
    }
}
set vTcl(btop) $btop1
Window show .top1 $btop1
if {$vTcl(borrow)} {
    $btop1 configure -background plum
}

