#############################################################################
# Generated by PAGE version 4.8.9
# in conjunction with Tcl version 8.6
set vTcl(timestamp) ""


vTcl:font:add_GUI_font font10 \
"-family {DejaVu Sans} -size 14 -weight normal -slant roman -underline 0 -overstrike 0"
set vTcl(actual_gui_bg) #f5deb3
set vTcl(actual_gui_fg) #000000
set vTcl(actual_gui_menu_bg) #f5deb3
set vTcl(actual_gui_menu_fg) #000000
set vTcl(complement_color) #b2c9f4
set vTcl(analog_color_p) #eaf4b2
set vTcl(analog_color_m) #f4bcb2
set vTcl(active_fg) #111111
set vTcl(actual_gui_menu_active_bg)  #f4bcb2
set vTcl(active_menu_fg) #000000
#############################################################################
# vTcl Code to Load User Fonts

vTcl:font:add_font \
    "-family {DejaVu Sans} -size 12 -weight normal -slant roman -underline 0 -overstrike 0" \
    user \
    vTcl:font11
vTcl:font:add_font \
    "-family {DejaVu Sans} -size 10 -weight normal -slant roman -underline 0 -overstrike 0" \
    user \
    vTcl:font12
#################################
#LIBRARY PROCEDURES
#


if {[info exists vTcl(sourcing)]} {

proc vTcl:project:info {} {
    set base .top36
    namespace eval ::widgets::$base {
        set dflt,origin 0
        set runvisible 1
    }
    set site_3_0 $base.m37
    namespace eval ::widgets_bindings {
        set tagslist _TopLevel
    }
    namespace eval ::vTcl::modules::main {
        set procs {
        }
        set compounds {
        }
        set projectType single
    }
}
}

#################################
# USER DEFINED PROCEDURES
#

#################################
# GENERATED GUI PROCEDURES
#
    ttk::style configure Menu -background #f5deb3
    ttk::style configure Menu -foreground #000000
    ttk::style configure Menu -font font9
    menu .pop39 \
        -activebackground {#ffffcd} -activeforeground black \
        -background {#f5deb3} -font $::vTcl(fonts,vTcl:font12,object) \
        -foreground black -tearoff 1 
    vTcl:DefineAlias ".pop39" "Popupmenu1" vTcl:WidgetProc "" 1
    .pop39 add cascade \
        -menu .pop39.men40 -activebackground {#f4bcb2} \
        -activeforeground {#111111} -background {#f5deb3} \
        -font [vTcl:font:getFontFromDescr "-family {DejaVu Sans Mono} -size 14 -weight normal -slant roman -underline 0 -overstrike 0"] \
        -foreground {#000000} -label Zoom 
    set site_2_0 "."
    menu .pop39.men40 \
        -activebackground {#ffffcd} -activeforeground black \
        -background {#f5deb3} -font TkMenuFont -foreground black -tearoff 0 
    .pop39.men40 add command \
        -activebackground {#f4bcb2} -activeforeground {#000000} \
        -background {#f5deb3} -command lambda:zoom('in') \
        -font [vTcl:font:getFontFromDescr "-family {DejaVu Sans} -size 12 -weight normal -slant roman -underline 0 -overstrike 0"] \
        -foreground {#000000} -label {Zoom In} 
    .pop39.men40 add command \
        -activebackground {#f4bcb2} -activeforeground {#000000} \
        -background {#f5deb3} -command lambda:zoom('out') \
        -font [vTcl:font:getFontFromDescr "-family {DejaVu Sans} -size 12 -weight normal -slant roman -underline 0 -overstrike 0"] \
        -foreground {#000000} -label {Zoom Out} 
    .pop39.men40 add command \
        -activebackground {#f4bcb2} -activeforeground {#000000} \
        -background {#f5deb3} -command lambda:zoom('default') \
        -font [vTcl:font:getFontFromDescr "-family {DejaVu Sans} -size 12 -weight normal -slant roman -underline 0 -overstrike 0"] \
        -foreground {#000000} -label {Default Size} 
    .pop39 add command \
        -activebackground {#f4bcb2} -activeforeground {#000000} \
        -background {#f5deb3} -command refresh \
        -font [vTcl:font:getFontFromDescr "-family {DejaVu Sans} -size 12 -weight normal -slant roman -underline 0 -overstrike 0"] \
        -foreground {#000000} -label Refresh 
    .pop39 add command \
        -activebackground {#f4bcb2} -activeforeground {#000000} \
        -background {#f5deb3} -command quit \
        -font [vTcl:font:getFontFromDescr "-family {DejaVu Sans} -size 12 -weight normal -slant roman -underline 0 -overstrike 0"] \
        -foreground {#000000} -label Quit 

proc vTclWindow.top36 {base} {
    if {$base == ""} {
        set base .top36
    }
    if {[winfo exists $base]} {
        wm deiconify $base; return
    }
    set top $base
    ###################
    # CREATING WIDGETS
    ###################
    vTcl::widgets::core::toplevel::createCmd $top -class Toplevel \
        -menu "$top.m37" -background {#f5deb3} -highlightbackground {#f5deb3} \
        -highlightcolor black 
    wm focusmodel $top passive
    wm geometry $top 600x450+650+150
    update
    # set in toplevel.wgt.
    global vTcl
    set vTcl(save,dflt,origin) 0
    wm maxsize $top 1905 1050
    wm minsize $top 1 1
    wm overrideredirect $top 0
    wm resizable $top 1 1
    wm deiconify $top
    wm title $top "Library Demo"
    vTcl:DefineAlias "$top" "Toplevel1" vTcl:Toplevel:WidgetProc "" 1
    menu $top.m37 \
        -activebackground {#f4bcb2} -activeforeground black \
        -background {#f5deb3} -font $::vTcl(fonts,vTcl:font11,object) \
        -foreground {#000000} -tearoff 0 
    $top.m37 add cascade \
        -menu "$top.m37.men38" -activebackground {#f4bcb2} \
        -activeforeground {#111111} -background {#f5deb3} \
        -font [vTcl:font:getFontFromDescr "-family {DejaVu Sans} -size 12 -weight normal -slant roman -underline 0 -overstrike 0"] \
        -foreground {#000000} -label Zoom 
    set site_3_0 $top.m37
    menu $site_3_0.men38 \
        -activebackground {#ffffcd} -activeforeground black \
        -background {#f5deb3} -font TkMenuFont -foreground black -tearoff 0 
    $site_3_0.men38 add command \
        -activebackground {#f4bcb2} -activeforeground {#000000} \
        -background {#f5deb3} -command {#lambda:zoom('in')} \
        -font [vTcl:font:getFontFromDescr "-family {DejaVu Sans} -size 12 -weight normal -slant roman -underline 0 -overstrike 0"] \
        -foreground {#000000} -label {Zoom In} 
    $site_3_0.men38 add command \
        -activebackground {#f4bcb2} -activeforeground {#000000} \
        -background {#f5deb3} -command {#lambda:zoom('out')} \
        -font [vTcl:font:getFontFromDescr "-family {DejaVu Sans} -size 12 -weight normal -slant roman -underline 0 -overstrike 0"] \
        -foreground {#000000} -label {Zoom Out} 
    $site_3_0.men38 add command \
        -activebackground {#f4bcb2} -activeforeground {#000000} \
        -background {#f5deb3} -command {#lambda:zoom('default')} \
        -font [vTcl:font:getFontFromDescr "-family {DejaVu Sans} -size 12 -weight normal -slant roman -underline 0 -overstrike 0"] \
        -foreground {#000000} -label {Default Size} 
    $top.m37 add command \
        -activebackground {#f4bcb2} -activeforeground {#000000} \
        -background {#f5deb3} -command {#refresh} \
        -font [vTcl:font:getFontFromDescr "-family {DejaVu Sans} -size 12 -weight normal -slant roman -underline 0 -overstrike 0"] \
        -foreground {#000000} -label Refresh 
    $top.m37 add command \
        -activebackground {#f4bcb2} -activeforeground {#000000} \
        -background {#f5deb3} -command {#quit} \
        -font [vTcl:font:getFontFromDescr "-family {DejaVu Sans} -size 12 -weight normal -slant roman -underline 0 -overstrike 0"] \
        -foreground {#000000} -label Quit 
    vTcl::widgets::ttk::custom::CreateCmd $top.cus37 \
        -background {#f5deb3} -height 75 -highlightbackground {#f5deb3} \
        -highlightcolor black -width 125 
    vTcl:DefineAlias "$top.cus37" "Custom1" vTcl:WidgetProc "Toplevel1" 1
    ###################
    # SETTING GEOMETRY
    ###################
    place $top.cus37 \
        -in $top -x 0 -y 0 -width 0 -relwidth 1 -height 0 -relheight 1 \
        -anchor nw -bordermode ignore 

    vTcl:FireEvent $base <<Ready>>
}

#############################################################################
## Binding tag:  _TopLevel

bind "_TopLevel" <<Create>> {
    if {![info exists _topcount]} {set _topcount 0}; incr _topcount
}
bind "_TopLevel" <<DeleteWindow>> {
    if {[set ::%W::_modal]} {
                vTcl:Toplevel:WidgetProc %W endmodal
            } else {
                destroy %W; if {$_topcount == 0} {exit}
            }
}
bind "_TopLevel" <Destroy> {
    if {[winfo toplevel %W] == "%W"} {incr _topcount -1}
}

Window show .
Window show .top36

