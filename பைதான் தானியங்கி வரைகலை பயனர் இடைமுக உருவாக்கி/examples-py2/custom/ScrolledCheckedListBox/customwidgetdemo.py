#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.15a
# In conjunction with Tcl version 8.6
#    Jun 16, 2018 10:56:41 AM

import sys

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import customwidgetdemo_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    top = Custom_Widget_Demo (root)
    customwidgetdemo_support.init(root, top)
    root.mainloop()

w = None
def create_Custom_Widget_Demo(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel (root)
    top = Custom_Widget_Demo (w)
    customwidgetdemo_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Custom_Widget_Demo():
    global w
    w.destroy()
    w = None


class Custom_Widget_Demo:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#d9d9d9' # X11 color: 'gray85'
        font9 = "-family {DejaVu Sans} -size 10 -weight normal -slant "  \
            "roman -underline 0 -overstrike 0"
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font=font9)
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("529x522+296+123")
        top.title("Custom Widget Demo")



        self.TSizegrip1 = ttk.Sizegrip(top)
        self.TSizegrip1.place(anchor=SE, relx=1.0, rely=1.0)

        self.Message1 = Message(top)
        self.Message1.place(relx=0.04, rely=0.03, relheight=0.12, relwidth=0.93)
        self.Message1.configure(font=font9)
        self.Message1.configure(relief=SUNKEN)
        self.Message1.configure(text='''Message''')
        self.Message1.configure(width=491)

        self.Frame1 = Frame(top)
        self.Frame1.place(relx=0.06, rely=0.21, relheight=0.72, relwidth=0.5)
        self.Frame1.configure(relief=GROOVE)
        self.Frame1.configure(borderwidth="2")
        self.Frame1.configure(relief=GROOVE)
        self.Frame1.configure(width=265)

        self.Custom1 = customwidgetdemo_support.Custom(self.Frame1)
        self.Custom1.place(relx=0.0, rely=0.0, relheight=1.0, relwidth=1.0)

        self.btnGetChecks = Button(top)
        self.btnGetChecks.place(relx=0.68, rely=0.34, height=30, width=110)
        self.btnGetChecks.configure(activebackground="#d9d9d9")
        self.btnGetChecks.configure(command=customwidgetdemo_support.on_btnGetChecks)
        self.btnGetChecks.configure(font=font9)
        self.btnGetChecks.configure(text='''Get Checks''')
        self.btnGetChecks.configure(width=110)

        self.btnClearChecks = Button(top)
        self.btnClearChecks.place(relx=0.68, rely=0.53, height=30, width=110)
        self.btnClearChecks.configure(activebackground="#d9d9d9")
        self.btnClearChecks.configure(command=customwidgetdemo_support.on_btnClearChecks)
        self.btnClearChecks.configure(font=font9)
        self.btnClearChecks.configure(text='''Clear Checks''')

        self.btnExit = Button(top)
        self.btnExit.place(relx=0.68, rely=0.72, height=30, width=110)
        self.btnExit.configure(activebackground="#d9d9d9")
        self.btnExit.configure(command=customwidgetdemo_support.on_btnExit)
        self.btnExit.configure(font=font9)
        self.btnExit.configure(text='''Exit''')
        self.btnExit.configure(width=109)






if __name__ == '__main__':
    vp_start_gui()



