#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.25
#  in conjunction with Tcl version 8.6
#    Aug 16, 2019 08:24:09 PM PDT  platform: Linux

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import lf_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, வேர்
    வேர் = tk.Tk()
    lf_support.set_Tk_var()
    top = Toplevel1 (வேர்)
    lf_support.init(வேர், top)
    வேர்.mainloop()

w = None
def create_Toplevel1(வேர், *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = வேர்
    w = tk.Toplevel (வேர்)
    lf_support.set_Tk_var()
    top = Toplevel1 (w)
    lf_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#b2c9f4' # Closest X11 color: 'SlateGray2'
        _ana1color = '#eaf4b2' # Closest X11 color: '{pale goldenrod}'
        _ana2color = '#f4bcb2' # Closest X11 color: 'RosyBrown2'
        font12 = "-family {DejaVu Sans Mono} -size 14 -weight normal "  \
            "-slant roman -underline 0 -overstrike 0"
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font=font12)
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("1037x654+329+175")
        top.title("Most Available Widgets")
        top.configure(highlightbackground="#f5deb3")
        top.configure(highlightcolor="black")

        self.Labelframe1 = tk.LabelFrame(top)
        self.Labelframe1.place(relx=0.019, rely=0.076, relheight=0.313
                , relwidth=0.145)
        self.Labelframe1.configure(relief='groove')
        self.Labelframe1.configure(text='''Buttons''')
        self.Labelframe1.configure(highlightbackground="#f5deb3")

        self.Button1 = tk.Button(self.Labelframe1)
        self.Button1.place(relx=0.133, rely=0.146, height=31, width=71
                , bordermode='ignore')
        self.Button1.configure(activebackground="#d9d9d9")
        self.Button1.configure(disabledforeground="#b8a786")
        self.Button1.configure(highlightbackground="#f5deb3")
        self.Button1.configure(text='''Button''')

        self.Checkbutton1 = tk.Checkbutton(self.Labelframe1)
        self.Checkbutton1.place(relx=0.2, rely=0.341, relheight=0.112
                , relwidth=0.453, bordermode='ignore')
        self.Checkbutton1.configure(activebackground="#d9d9d9")
        self.Checkbutton1.configure(disabledforeground="#b8a786")
        self.Checkbutton1.configure(highlightbackground="#f5deb3")
        self.Checkbutton1.configure(justify='left')
        self.Checkbutton1.configure(text='''Check''')
        self.Checkbutton1.configure(variable=lf_support.che42)

        self.Radiobutton1 = tk.Radiobutton(self.Labelframe1)
        self.Radiobutton1.place(relx=0.333, rely=0.537, relheight=0.112
                , relwidth=0.46, bordermode='ignore')
        self.Radiobutton1.configure(activebackground="#d9d9d9")
        self.Radiobutton1.configure(disabledforeground="#b8a786")
        self.Radiobutton1.configure(justify='left')
        self.Radiobutton1.configure(text='''Radio''')
        self.Radiobutton1.configure(variable=lf_support.selectedButton)

        self.Radiobutton2 = tk.Radiobutton(self.Labelframe1)
        self.Radiobutton2.place(relx=0.267, rely=0.683, relheight=0.141
                , relwidth=0.633, bordermode='ignore')
        self.Radiobutton2.configure(activebackground="#d9d9d9")
        self.Radiobutton2.configure(disabledforeground="#b8a786")
        self.Radiobutton2.configure(justify='left')
        self.Radiobutton2.configure(text='''Radio''')
        self.Radiobutton2.configure(variable=lf_support.selectedButton)

        self.Labelframe2 = tk.LabelFrame(top)
        self.Labelframe2.place(relx=0.159, rely=0.084, relheight=0.313
                , relwidth=0.145)
        self.Labelframe2.configure(relief='groove')
        self.Labelframe2.configure(labelanchor="sw")
        self.Labelframe2.configure(text='''Labels''')
        self.Labelframe2.configure(highlightbackground="#f5deb3")

        self.Label1 = tk.Label(self.Labelframe2)
        self.Label1.place(relx=0.133, rely=0.098, height=21, width=99
                , bordermode='ignore')
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(disabledforeground="#b8a786")
        self.Label1.configure(highlightbackground="#f5deb3")
        self.Label1.configure(text='''Flat''')

        self.Label2 = tk.Label(self.Labelframe2)
        self.Label2.place(relx=0.067, rely=0.244, height=21, width=119
                , bordermode='ignore')
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(disabledforeground="#b8a786")
        self.Label2.configure(highlightbackground="#f5deb3")
        self.Label2.configure(relief="groove")
        self.Label2.configure(text='''Groove''')

        self.Label3 = tk.Label(self.Labelframe2)
        self.Label3.place(relx=0.067, rely=0.488, height=21, width=119
                , bordermode='ignore')
        self.Label3.configure(activebackground="#f9f9f9")
        self.Label3.configure(disabledforeground="#b8a786")
        self.Label3.configure(highlightbackground="#f5deb3")
        self.Label3.configure(relief="ridge")
        self.Label3.configure(text='''Ridge''')

        self.Label4 = tk.Label(self.Labelframe2)
        self.Label4.place(relx=0.067, rely=0.366, height=21, width=119
                , bordermode='ignore')
        self.Label4.configure(activebackground="#f9f9f9")
        self.Label4.configure(disabledforeground="#b8a786")
        self.Label4.configure(highlightbackground="#f5deb3")
        self.Label4.configure(relief="raised")
        self.Label4.configure(text='''Raised''')

        self.Label5 = tk.Label(self.Labelframe2)
        self.Label5.place(relx=0.067, rely=0.61, height=21, width=119
                , bordermode='ignore')
        self.Label5.configure(activebackground="#f9f9f9")
        self.Label5.configure(disabledforeground="#b8a786")
        self.Label5.configure(highlightbackground="#f5deb3")
        self.Label5.configure(relief="sunken")
        self.Label5.configure(text='''Sunken''')

        self.Message1 = tk.Message(self.Labelframe2)
        self.Message1.place(relx=0.067, rely=0.78, relheight=0.122
                , relwidth=0.813, bordermode='ignore')
        self.Message1.configure(highlightbackground="#f5deb3")
        self.Message1.configure(relief="ridge")
        self.Message1.configure(text='''Message''')
        self.Message1.configure(width=122)

        self.Labelframe3 = tk.LabelFrame(top)
        self.Labelframe3.place(relx=0.304, rely=0.076, relheight=0.313
                , relwidth=0.212)
        self.Labelframe3.configure(relief='groove')
        self.Labelframe3.configure(text='''Text WIdgets''')
        self.Labelframe3.configure(highlightbackground="#f5deb3")

        self.Entry1 = tk.Entry(self.Labelframe3)
        self.Entry1.place(relx=0.045, rely=0.244, height=23, relwidth=0.755
                , bordermode='ignore')
        self.Entry1.configure(background="white")
        self.Entry1.configure(disabledforeground="#b8a786")
        self.Entry1.configure(font="-family {DejaVu Sans Mono} -size 10")
        self.Entry1.configure(highlightbackground="#f5deb3")
        self.Entry1.configure(selectbackground="#c4c4c4")

        self.Text1 = tk.Text(self.Labelframe3)
        self.Text1.place(relx=0.045, rely=0.585, relheight=0.361, relwidth=0.891
                , bordermode='ignore')
        self.Text1.configure(background="white")
        self.Text1.configure(font="-family {DejaVu Sans} -size 10")
        self.Text1.configure(highlightbackground="#f5deb3")
        self.Text1.configure(selectbackground="#c4c4c4")
        self.Text1.configure(wrap="word")

        self.Label6 = tk.Label(self.Labelframe3)
        self.Label6.place(relx=0.045, rely=0.098, height=21, width=39
                , bordermode='ignore')
        self.Label6.configure(activebackground="#f9f9f9")
        self.Label6.configure(disabledforeground="#b8a786")
        self.Label6.configure(highlightbackground="#f5deb3")
        self.Label6.configure(text='''Entry''')

        self.Label7 = tk.Label(self.Labelframe3)
        self.Label7.place(relx=0.045, rely=0.439, height=21, width=58
                , bordermode='ignore')
        self.Label7.configure(activebackground="#f9f9f9")
        self.Label7.configure(disabledforeground="#b8a786")
        self.Label7.configure(highlightbackground="#f5deb3")
        self.Label7.configure(text='''TextBox''')

        self.Labelframe4 = tk.LabelFrame(top)
        self.Labelframe4.place(relx=0.516, rely=0.076, relheight=0.313
                , relwidth=0.364)
        self.Labelframe4.configure(relief='groove')
        self.Labelframe4.configure(text='''Other Widgets''')
        self.Labelframe4.configure(highlightbackground="#f5deb3")

        self.Listbox1 = tk.Listbox(self.Labelframe4)
        self.Listbox1.place(relx=0.053, rely=0.244, relheight=0.371
                , relwidth=0.223, bordermode='ignore')
        self.Listbox1.configure(background="white")
        self.Listbox1.configure(disabledforeground="#b8a786")
        self.Listbox1.configure(font="-family {DejaVu Sans Mono} -size 10")
        self.Listbox1.configure(highlightbackground="#f5deb3")
        self.Listbox1.configure(selectbackground="#c4c4c4")

        self.Scale1 = tk.Scale(self.Labelframe4, from_=0.0, to=100.0)
        self.Scale1.place(relx=0.318, rely=0.146, relwidth=0.0, relheight=0.507
                , width=52, bordermode='ignore')
        self.Scale1.configure(activebackground="#d9d9d9")
        self.Scale1.configure(font="-family {DejaVu Sans} -size 10")
        self.Scale1.configure(highlightbackground="#f5deb3")
        self.Scale1.configure(troughcolor="#d9d9d9")

        self.Scale2 = tk.Scale(self.Labelframe4, from_=0.0, to=100.0)
        self.Scale2.place(relx=0.504, rely=0.293, relwidth=0.276, relheight=0.0
                , height=42, bordermode='ignore')
        self.Scale2.configure(activebackground="#d9d9d9")
        self.Scale2.configure(font="-family {DejaVu Sans} -size 10")
        self.Scale2.configure(highlightbackground="#f5deb3")
        self.Scale2.configure(orient="horizontal")
        self.Scale2.configure(troughcolor="#d9d9d9")

        self.Spinbox1 = tk.Spinbox(self.Labelframe4, from_=1.0, to=100.0)
        self.Spinbox1.place(relx=0.08, rely=0.78, relheight=0.112, relwidth=0.528
                , bordermode='ignore')
        self.Spinbox1.configure(activebackground="#f9f9f9")
        self.Spinbox1.configure(background="white")
        self.Spinbox1.configure(buttonbackground="#f5deb3")
        self.Spinbox1.configure(disabledforeground="#b8a786")
        self.Spinbox1.configure(font="-family {DejaVu Sans} -size 10")
        self.Spinbox1.configure(highlightbackground="black")
        self.Spinbox1.configure(selectbackground="#c4c4c4")
        self.Spinbox1.configure(textvariable=lf_support.spinbox)

        self.Label8 = tk.Label(self.Labelframe4)
        self.Label8.place(relx=0.531, rely=0.195, height=21, width=96
                , bordermode='ignore')
        self.Label8.configure(activebackground="#f9f9f9")
        self.Label8.configure(disabledforeground="#b8a786")
        self.Label8.configure(highlightbackground="#f5deb3")
        self.Label8.configure(text='''Scale Widgets''')

        self.Label9 = tk.Label(self.Labelframe4)
        self.Label9.place(relx=0.08, rely=0.634, height=21, width=57
                , bordermode='ignore')
        self.Label9.configure(activebackground="#f9f9f9")
        self.Label9.configure(disabledforeground="#b8a786")
        self.Label9.configure(highlightbackground="#f5deb3")
        self.Label9.configure(text='''SpinBox''')

        self.Label10 = tk.Label(self.Labelframe4)
        self.Label10.place(relx=0.053, rely=0.122, height=21, width=52
                , bordermode='ignore')
        self.Label10.configure(activebackground="#f9f9f9")
        self.Label10.configure(disabledforeground="#b8a786")
        self.Label10.configure(highlightbackground="#f5deb3")
        self.Label10.configure(text='''ListBox''')

        self.TSeparator1 = ttk.Separator(top)
        self.TSeparator1.place(relx=0.01, rely=0.413, relwidth=0.974)

        self.Label11 = tk.Label(top)
        self.Label11.place(relx=0.029, rely=0.428, height=21, width=114)
        self.Label11.configure(activebackground="#f9f9f9")
        self.Label11.configure(disabledforeground="#b8a786")
        self.Label11.configure(highlightbackground="#f5deb3")
        self.Label11.configure(text='''Themed Widgets''')

        self.Label12 = tk.Label(top)
        self.Label12.place(relx=0.019, rely=0.031, height=21, width=132)
        self.Label12.configure(activebackground="#f9f9f9")
        self.Label12.configure(disabledforeground="#b8a786")
        self.Label12.configure(highlightbackground="#f5deb3")
        self.Label12.configure(text='''"Standard" Widgets''')

        self.TLabelframe1 = ttk.Labelframe(top)
        self.TLabelframe1.place(relx=0.029, rely=0.489, relheight=0.39
                , relwidth=0.193)
        self.TLabelframe1.configure(relief='')
        self.TLabelframe1.configure(text='''TButtons''')

        self.TButton1 = ttk.Button(self.TLabelframe1)
        self.TButton1.place(relx=0.1, rely=0.118, height=34, width=110
                , bordermode='ignore')
        self.TButton1.configure(takefocus="")
        self.TButton1.configure(text='''Tbutton''')

        self.style.map('TCheckbutton',background=
            [('selected', _bgcolor), ('active', _ana2color)])
        self.TCheckbutton1 = ttk.Checkbutton(self.TLabelframe1)
        self.TCheckbutton1.place(relx=0.25, rely=0.275, relwidth=0.42
                , relheight=0.0, height=27, bordermode='ignore')
        self.TCheckbutton1.configure(variable=lf_support.tch70)
        self.TCheckbutton1.configure(takefocus="")
        self.TCheckbutton1.configure(text='''Tcheck''')

        self.style.map('TRadiobutton',background=
            [('selected', _bgcolor), ('active', _ana2color)])
        self.TRadiobutton1 = ttk.Radiobutton(self.TLabelframe1)
        self.TRadiobutton1.place(relx=0.55, rely=0.392, relwidth=0.435
                , relheight=0.0, height=27, bordermode='ignore')
        self.TRadiobutton1.configure(variable=lf_support.selectedButton)
        self.TRadiobutton1.configure(takefocus="")
        self.TRadiobutton1.configure(text='''TRadio''')

        self.TRadiobutton2 = ttk.Radiobutton(self.TLabelframe1)
        self.TRadiobutton2.place(relx=0.55, rely=0.471, relwidth=0.435
                , relheight=0.0, height=27, bordermode='ignore')
        self.TRadiobutton2.configure(variable=lf_support.selectedButton)
        self.TRadiobutton2.configure(takefocus="")
        self.TRadiobutton2.configure(text='''TRadio''')

        self.TLabelframe2 = ttk.Labelframe(top)
        self.TLabelframe2.place(relx=0.222, rely=0.505, relheight=0.39
                , relwidth=0.193)
        self.TLabelframe2.configure(relief='')
        self.TLabelframe2.configure(labelanchor="s")
        self.TLabelframe2.configure(text='''TComboBox''')

        self.TCombobox1 = ttk.Combobox(self.TLabelframe2)
        self.TCombobox1.place(relx=0.1, rely=0.118, relheight=0.082
                , relwidth=0.735, bordermode='ignore')
        self.TCombobox1.configure(textvariable=lf_support.combobox)
        self.TCombobox1.configure(takefocus="")

        self.TLabelframe3 = ttk.Labelframe(top)
        self.TLabelframe3.place(relx=0.415, rely=0.489, relheight=0.39
                , relwidth=0.231)
        self.TLabelframe3.configure(relief='')
        self.TLabelframe3.configure(text='''Tlabelframe''')

        self.TEntry1 = ttk.Entry(self.TLabelframe3)
        self.TEntry1.place(relx=0.125, rely=0.196, relheight=0.082
                , relwidth=0.767, bordermode='ignore')
        self.TEntry1.configure(takefocus="")
        self.TEntry1.configure(cursor="xterm")

        self.TProgressbar1 = ttk.Progressbar(self.TLabelframe3)
        self.TProgressbar1.place(relx=0.125, rely=0.392, relwidth=0.417
                , relheight=0.0, height=19, bordermode='ignore')

        self.TScale1 = ttk.Scale(self.TLabelframe3, from_=0, to=1.0)
        self.TScale1.place(relx=0.042, rely=0.51, relwidth=0.0, relheight=0.392
                , width=17, bordermode='ignore')
        self.TScale1.configure(orient="vertical")
        self.TScale1.configure(takefocus="")

        self.TScale2 = ttk.Scale(self.TLabelframe3, from_=0, to=1.0)
        self.TScale2.place(relx=0.167, rely=0.824, relwidth=0.417, relheight=0.0
                , height=17, bordermode='ignore')
        self.TScale2.configure(takefocus="")

        self.TLabel1 = ttk.Label(self.TLabelframe3)
        self.TLabel1.place(relx=0.167, rely=0.588, height=19, width=45
                , bordermode='ignore')
        self.TLabel1.configure(background="#d9d9d9")
        self.TLabel1.configure(foreground="#000000")
        self.TLabel1.configure(font="TkDefaultFont")
        self.TLabel1.configure(relief="flat")
        self.TLabel1.configure(text='''TScale''')

        self.TLabel2 = ttk.Label(self.TLabelframe3)
        self.TLabel2.place(relx=0.125, rely=0.314, height=19, width=91
                , bordermode='ignore')
        self.TLabel2.configure(background="#d9d9d9")
        self.TLabel2.configure(foreground="#000000")
        self.TLabel2.configure(font="TkDefaultFont")
        self.TLabel2.configure(relief="flat")
        self.TLabel2.configure(text='''TProgressBar''')

        self.TLabel3 = ttk.Label(self.TLabelframe3)
        self.TLabel3.place(relx=0.083, rely=0.078, height=19, width=45
                , bordermode='ignore')
        self.TLabel3.configure(background="#d9d9d9")
        self.TLabel3.configure(foreground="#000000")
        self.TLabel3.configure(font="TkDefaultFont")
        self.TLabel3.configure(relief="flat")
        self.TLabel3.configure(text='''TEntry''')

        self.TFrame1 = ttk.Frame(top)
        self.TFrame1.place(relx=0.646, rely=0.505, relheight=0.372
                , relwidth=0.333)
        self.TFrame1.configure(relief='groove')
        self.TFrame1.configure(borderwidth="2")
        self.TFrame1.configure(relief="groove")

        self.style.configure('TNotebook.Tab', background=_bgcolor)
        self.style.configure('TNotebook.Tab', foreground=_fgcolor)
        self.style.map('TNotebook.Tab', background=
            [('selected', _compcolor), ('active',_ana2color)])
        self.TNotebook1 = ttk.Notebook(self.TFrame1)
        self.TNotebook1.place(relx=0.029, rely=0.041, relheight=0.926
                , relwidth=0.942)
        self.TNotebook1.configure(takefocus="")
        self.TNotebook1_t0 = tk.Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1_t0, padding=3)
        self.TNotebook1.tab(0, text="Page 1",compound="left",underline="-1",)
        self.TNotebook1_t0.configure(highlightbackground="#f5deb3")
        self.TNotebook1_t1 = tk.Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1_t1, padding=3)
        self.TNotebook1.tab(1, text="Page 2",compound="left",underline="-1",)
        self.TNotebook1_t1.configure(highlightbackground="#f5deb3")

        self.Button2 = tk.Button(top)
        self.Button2.place(relx=0.405, rely=0.902, height=27, width=69)
        self.Button2.configure(activebackground="#d9d9d9")
        self.Button2.configure(command=lf_support.quit)
        self.Button2.configure(disabledforeground="#b8a786")
        self.Button2.configure(font="-family {DejaVu Sans} -size 10")
        self.Button2.configure(highlightbackground="#f5deb3")
        self.Button2.configure(text='''Quit''')

if __name__ == '__main__':
    vp_start_gui()





