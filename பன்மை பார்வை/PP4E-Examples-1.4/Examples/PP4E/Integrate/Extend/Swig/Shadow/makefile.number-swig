###########################################################################
# Use SWIG to integrate the number.h C++ class for use in Python programs.
# Update: name "_number.dll" matters, because shadow class imports _number.
# Update: the "-shadow" swig command line arg is deprecated (on by default).
# Update: swig no longer creates a .doc file to rm here (ancient history).
###########################################################################

PYLIB = /usr/local/bin
PYINC = /usr/local/include/python3.1
SWIG  = /cygdrive/c/temp/swigwin-2.0.0/swig

all: _number.dll number.py

# wrapper + real class
_number.dll: number_wrap.o number.o
	g++ -shared number_wrap.o number.o -L$(PYLIB) -lpython3.1 -o $@

# generated class wrapper module(s)
number_wrap.o: number_wrap.cxx number.h
	g++ number_wrap.cxx -c -g -I$(PYINC)

number_wrap.cxx: number.i
	$(SWIG) -c++ -python number.i

number.py: number.i
	$(SWIG) -c++ -python number.i

# wrapped C++ class code
number.o: number.cxx number.h
	g++ number.cxx -c -g -Wno-deprecated

# non Python test
cxxtest:
	g++ main.cxx number.cxx -Wno-deprecated

clean:
	rm -f *.pyc *.o *.dll core a.exe
force:
	rm -f *.pyc *.o *.dll core a.exe number_wrap.cxx number.py
